jQuery(document).ready(function(){var g=!1;function _(e){var o=localStorage.getItem("order_pop"),o=JSON.parse(o);return!(o.dismissedUntil&&moment.duration(moment().utc().diff(o.dismissedUntil)).asMinutes()<0)||(g&&console.log(moment.duration(moment().utc().diff(o.dismissedUntil)).asMinutes()),void setTimeout(function(){jQuery(".op-popper").remove(),t(e)},1e4))}function t(e){var o,t,r,s;_(e)&&(o=jQuery("<div />"),t=e.options.pop_font_colour,r=e.options.pop_background_colour,s=e.options.pop_interval_between_pops_after_dismissed_minutes,orderPop=localStorage.getItem("order_pop"),orderPopData=JSON.parse(orderPop),o.attr("class","op-popper"),r&&o.css("background-color",r),jQuery(`<div class="op-content-container">
							<button type="button" class="close" aria-label="Close" 
											style="background-color: transparent; padding: 0; color: ${t};">
									<span id="order-pop-dismiss-button" data-dismissinterval="${s}" aria-hidden="true">&times;</span>
							</button>
							<div class="op-content-wrapper"></div>
					</div>`).appendTo(o),o.appendTo("body"),function e(o,t){if(!_(o))return;var r=o.options.pop_font_colour,s=1e3*parseInt(o.options.pop_interval_between_pop_refresh_seconds),n=f(o.order_date),a=o.customer.first_name,i=o.customer.last_name.charAt(0),p=o.customer.city,d=o.customer.state,l=o.products[t].name,c=o.products[t].url,u=o.products[t].image;var m=`
				<div class="op-content" style="color: ${r}">
						<span class="orderdate meta" style="color: ${r}">${n}</span>
						<p class="customer-details pt-0" style="color: ${r}">${a} ${i} 
								from ${p}, ${d} bought ...</p>
						<p class="product-name" style="color: ${r}">${l}</p>
						<span class="meta" style="color: ${r}">
								<a href="${c}" style="color: ${r}">Click here to view</a>
						</span>
				</div>
				<div class="op-image">${u}</div>
			`;jQuery(".op-content-wrapper").toggleClass("refreshing");setTimeout(function(){jQuery(".op-content-wrapper").html(m).toggleClass("refreshing")},500);t==o.products.length-1&&(t=0);setTimeout(function(){g&&console.log("Refreshing...."+new Date,o.products[t].name),e(o,++t)},s)}(e,0),g&&console.log(e))}function f(e){e=moment.duration(moment().diff(e)).asHours();return 48<e?parseInt(e/24)+" days ago":e<1?parseInt(60*e)+" min ago":parseInt(e)+" hours ago"}jQuery.ajax({type:"post",dataType:"json",url:myAjax.ajaxurl,data:{action:"op_get_order"}}).then(function(e){if(!e)throw Error;return function(e){var o=localStorage.getItem("order_pop"),t={},r=e.options.pop_interval_between_pops_after_dismissed_minutes;o&&(t=JSON.parse(o));t.dismissInterval=r,localStorage.setItem("order_pop",JSON.stringify(t)),(g=e.options.debugging_enabled)&&console.log("set local storage",t);return e}(e)}).then(function(e){e&&t(e)}),window.addEventListener("click",function(e){var o,t;"order-pop-dismiss-button"==e.target.id&&(o=document.getElementById(e.target.id).getAttribute("data-dismissinterval"),t={},(t=(e=localStorage.getItem("order_pop"))?JSON.parse(e):t).dismissedUntil=moment().add(o,"minutes"),localStorage.setItem("order_pop",JSON.stringify(t)),g&&console.log("dismissed",JSON.parse(e)),document.querySelector(".op-popper").style.left="-999px")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
